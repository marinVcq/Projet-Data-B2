{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\Fortunato\\\\client\\\\src\\\\context\\\\authContext.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(JSON.parse(localStorage.getItem(\"user\")) || null);\n  const login = async inputs => {\n    try {\n      // Log the request details before sending\n      console.log('Login Request:', {\n        method: 'POST',\n        url: '/auth/login',\n        data: inputs,\n        headers: {\n          'Content-Type': 'application/json' // Add other headers if needed\n        }\n      });\n\n      // Send the request\n      const res = await axios.post('/auth/login', inputs);\n\n      // Log the response details after receiving\n      console.log('Login Response:', {\n        status: res.status,\n        data: res.data,\n        headers: res.headers\n      });\n\n      // Set the current user based on the response\n      setCurrentUser(res.data);\n    } catch (error) {\n      console.error('Login error:', error);\n    }\n  };\n\n  // const login = async (inputs) => {\n  //   try {\n  //     const res = await axios.post(\"/auth/login\", inputs);\n  //     setCurrentUser(res.data);\n  //     console.log(inputs);\n  //   } catch (error) {\n  //     console.error('Login error:', error);\n  //   }\n  // };\n\n  const logout = async inputs => {\n    await axios.post(\"/auth/logout\");\n    setCurrentUser(null);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(currentUser));\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"yK7gvC6SLVOPzs9vDLLUNg/nC+4=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","AuthContextProvider","children","_s","currentUser","setCurrentUser","JSON","parse","localStorage","getItem","login","inputs","console","log","method","url","data","headers","res","post","status","error","logout","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Github/Fortunato/client/src/context/authContext.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"user\")) || null\r\n  );\r\n\r\n  const login = async (inputs) => {\r\n    try {\r\n      // Log the request details before sending\r\n      console.log('Login Request:', {\r\n        method: 'POST',\r\n        url: '/auth/login',\r\n        data: inputs,\r\n        headers: {\r\n          'Content-Type': 'application/json', // Add other headers if needed\r\n        },\r\n      });\r\n  \r\n      // Send the request\r\n      const res = await axios.post('/auth/login', inputs);\r\n  \r\n      // Log the response details after receiving\r\n      console.log('Login Response:', {\r\n        status: res.status,\r\n        data: res.data,\r\n        headers: res.headers,\r\n      });\r\n  \r\n      // Set the current user based on the response\r\n      setCurrentUser(res.data);\r\n  \r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  // const login = async (inputs) => {\r\n  //   try {\r\n  //     const res = await axios.post(\"/auth/login\", inputs);\r\n  //     setCurrentUser(res.data);\r\n  //     console.log(inputs);\r\n  //   } catch (error) {\r\n  //     console.error('Login error:', error);\r\n  //   }\r\n  // };\r\n\r\n  const logout = async (inputs) => {\r\n    await axios.post(\"/auth/logout\");\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(currentUser));\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAC5CS,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAC9C,CAAC;EAED,MAAMC,KAAK,GAAG,MAAOC,MAAM,IAAK;IAC9B,IAAI;MACF;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE;QAC5BC,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,aAAa;QAClBC,IAAI,EAAEL,MAAM;QACZM,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;QACtC;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,aAAa,EAAER,MAAM,CAAC;;MAEnD;MACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;QAC7BO,MAAM,EAAEF,GAAG,CAACE,MAAM;QAClBJ,IAAI,EAAEE,GAAG,CAACF,IAAI;QACdC,OAAO,EAAEC,GAAG,CAACD;MACf,CAAC,CAAC;;MAEF;MACAZ,cAAc,CAACa,GAAG,CAACF,IAAI,CAAC;IAE1B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,MAAM,GAAG,MAAOX,MAAM,IAAK;IAC/B,MAAMjB,KAAK,CAACyB,IAAI,CAAC,cAAc,CAAC;IAChCd,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdY,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACkB,SAAS,CAACpB,WAAW,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,WAAW;MAAEM,KAAK;MAAEY;IAAO,CAAE;IAAApB,QAAA,EACzDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA3DWF,mBAAmB;AAAA8B,EAAA,GAAnB9B,mBAAmB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}